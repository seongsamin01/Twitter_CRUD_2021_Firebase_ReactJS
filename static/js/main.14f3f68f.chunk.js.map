{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14f3f68f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBEwEAIpOK_JT4dXkS9Z63v-cqRDv4l0VE\",\r\n  authDomain: \"twitter-eeed3.firebaseapp.com\",\r\n  projectId: \"twitter-eeed3\",\r\n  storageBucket: \"twitter-eeed3.appspot.com\",\r\n  messagingSenderId: \"373127946744\",\r\n  appId: \"1:373127946744:web:400dea2f5546385db5360d\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n\r\n\r\n\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n            } = event;\r\n            if (name === \"email\") {\r\n                setEmail(value);\r\n            } else if (name === \"password\") {\r\n                setPassword(value);\r\n            }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n          console.log(data)  \r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);  \r\n    return ( \r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n            <input \r\n                name=\"email\" \r\n                type=\"emial\" \r\n                placeholder=\"Email\" \r\n                required\r\n                value={email}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input \r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                required\r\n                value={password}\r\n                className=\"authInput\"\r\n                onChange={onChange}\r\n            />\r\n            <input \r\n                type=\"submit\"\r\n                className=\"authInput authSubmit\"\r\n                value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign in\" : \"Create Account\"}\r\n        </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\n\r\n\r\nconst Auth = () => {    \r\n        const onSocialClick = async (event) => {\r\n        const {\r\n            target:{ name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n    const onDeleteClick = async () => {\r\n      const ok = window.confirm(\"정말로 이 tweet을 지우겠습니까?\");\r\n      console.log(ok);\r\n      if(ok) {\r\n        await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n        await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n      }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n            text: newTweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewTweet(value);\r\n    };\r\n    return (\r\n        <div className=\"tweet\">\r\n        {editing ? (\r\n            <>\r\n            <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Edit your Tweet\"\r\n                    value={newTweet}\r\n                    required\r\n                    autoFocus\r\n                    onChange={onChange}\r\n                    className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\r\n            </form>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n            </>\r\n        ) : (\r\n        <>\r\n            <h4>{tweetObj.text}</h4>\r\n            {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n            \r\n            \r\n            {isOwner && (\r\n                <div class=\"tweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )} \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Tweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'; //npm install uuid\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst TweetFactory = ({ userObj }) => { \r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (tweet === \"\") {\r\n            return;\r\n          }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\") {\r\n        const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()} `);\r\n    const response = await attachmentRef.putString(attachment, \"data_url\");\r\n    attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const tweetObj = {\r\n        text: tweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl\r\n    };\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n};\r\nconst onChange = (event) => {\r\n    const { \r\n        target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n};\r\nconst onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const { currentTarget: { result },\r\n     } = finishedEvent;\r\n     setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n};\r\nconst onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                  opacity: 0,\r\n                }}\r\n            />\r\n            \r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                <img\r\n                  src={attachment}\r\n                  style={{\r\n                    backgroundImage: attachment,\r\n                  }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                  <span>Remove</span>\r\n                  <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default TweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n            const tweetArray = snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n            }));\r\n            setTweets(tweetArray);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />  \r\n      <div style={{ marginTop: 30 }}>\r\n            {tweets.map((tweet) => (\r\n              <Tweet \r\n                key={tweet.id}\r\n                tweetObj={tweet}\r\n                isOwner={tweet.creatorId === userObj.uid}\r\n              />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n      authService.signOut();\r\n      history.push(\"/\");\r\n    };\r\n    const onChange = (event) => { \r\n      const {\r\n        target: { value },\r\n      } = event;\r\n      setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      if (userObj.displayName !== newDisplayName) {\r\n        await userObj.updateProfile({\r\n          displayName: newDisplayName,\r\n        });\r\n        refreshUser();\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n              onChange={onChange}\r\n              type=\"text\"\r\n              autoFocus\r\n              placeholder=\"Display name\"\r\n              value={newDisplayName}\r\n              className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n            />\r\n          </form>\r\n          <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div\r\n                style={{\r\n                  maxWidth: 890,\r\n                  width: \"100%\",\r\n                  margin: \"0 auto\",\r\n                  marginTop: 80,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                </Route>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n              </>  \r\n            )}\r\n            </Switch>\r\n        </Router>\r\n        \r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n        setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n      setUserObj({\n        displayName: user.displayName,\n        uid: user.uid,\n        updateProfile: (args) => user.updateProfile(args),\n      });\n    };\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}